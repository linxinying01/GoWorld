// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"GoWorld/internal/app/handlers"
	"GoWorld/internal/app/middleware"
	"GoWorld/internal/app/repositories"
	"GoWorld/internal/app/services"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	config, err := ProvideConfig()
	if err != nil {
		return nil, err
	}
	logger, err := ProvideLogger(config)
	if err != nil {
		return nil, err
	}
	db, err := ProvideDB(config, logger)
	if err != nil {
		return nil, err
	}
	userRepository := repositories.NewUserRepository(db, logger)
	authService := services.NewAuthService(userRepository, logger, config)
	authHandler := handlers.NewAuthHandler(authService, logger)
	userService := services.NewUserService(userRepository, logger)
	userHandler := handlers.NewUserHandler(logger, config, userService)
	jwtMiddleware := middleware.NewJWTMiddleware(config, logger)
	app := &App{
		AuthHandler:   authHandler,
		UserHandler:   userHandler,
		JWTMiddleware: jwtMiddleware,
	}
	return app, nil
}
